import{initializeApp as T}from"https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js";import{getDatabase as b,ref as u,onValue as h,update as g,push as S}from"https://www.gstatic.com/firebasejs/10.12.0/firebase-database.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function e(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(t){if(t.ep)return;t.ep=!0;const o=e(t);fetch(t.href,o)}})();const L={apiKey:{}.VITE_FIREBASE_API_KEY,authDomain:{}.VITE_FIREBASE_AUTH_DOMAIN,databaseURL:{}.VITE_FIREBASE_DB_URL,projectId:{}.VITE_FIREBASE_PROJECT_ID,storageBucket:{}.VITE_FIREBASE_STORAGE_BUCKET,messagingSenderId:{}.VITE_FIREBASE_MSG_SENDER_ID,appId:{}.VITE_FIREBASE_APP_ID},_=T(L),m=b(_),E=u(m,"files"),f=document.getElementById("fileForm"),r=document.getElementById("fileType"),c=document.getElementById("fileName"),l=document.getElementById("fileNameDropdown"),I=document.querySelector("#filesTable tbody"),B=document.getElementById("searchBar"),k=document.getElementById("refreshBtn");let d=[];h(E,a=>{d=[],a.forEach(s=>{d.push({id:s.key,...s.val()})}),y()});r.addEventListener("change",()=>{const a=r.value;console.log("Selected Type: ",a);const s=d.filter(e=>e.fileType===a&&(e.status==="Received"||e.status==="Closed"));console.log("Matched received/closed files: ",s),s.length?(l.innerHTML='<option value="">Select Existing File</option>'+s.map(e=>`<option value="${e.fileName}">${e.fileName}</option>`).join(""),l.style.display="block"):(l.innerHTML="",l.style.display="none"),c.style.display="block"});f.addEventListener("submit",async a=>{a.preventDefault();const s=r.value,e=l.value||c.value.trim();if(!s||!e)return;const n={fileType:s,fileName:e,sentBy:document.getElementById("sentBy").value,givenTo:document.getElementById("givenTo").value,dateGiven:document.getElementById("dateGiven").value,remarks:document.getElementById("remarks").value,status:document.getElementById("status").value},t=d.find(o=>o.fileType===s&&o.fileName===e);if(t){const o=t.history||[];o.push({date:new Date().toISOString().split("T")[0],status:n.status,sentBy:n.sentBy,givenTo:n.givenTo,remarks:n.remarks}),await g(u(m,`files/${t.id}`),{...n,history:o})}else n.history=[{date:new Date().toISOString().split("T")[0],status:n.status,sentBy:n.sentBy,givenTo:n.givenTo,remarks:n.remarks}],await S(E,n);f.reset(),l.style.display="none",c.style.display="block"});function y(){const a=B.value.toLowerCase(),s=d.filter(e=>{var n;return(e.status==="Pending"||e.status==="Forwarded")&&(e.fileName.toLowerCase().includes(a)||((n=e.fileType)==null?void 0:n.toLowerCase().includes(a)))});I.innerHTML=s.length?s.map(e=>`
      <tr>
        <td>${e.fileType}</td>
        <td>${e.fileName}</td>
        <td>${e.sentBy}</td>
        <td>${e.givenTo}</td>
        <td>${e.dateGiven}</td>
        <td>${e.remarks||""}</td>
        <td><span class="status-${e.status.toLowerCase()}">${e.status}</span></td>
<td>
  <button class="update-btn" data-id="${e.id}">Update</button>
</td>
<td>
  <button class="history-btn" data-id="${e.id}">View History</button>
</td>

      </tr>`).join(""):'<tr><td colspan="8" style="text-align:center;">No files found</td></tr>'}B.addEventListener("input",y);k.addEventListener("click",y);I.addEventListener("click",a=>{var n;const s=a.target.dataset.id,e=d.find(t=>t.id===s);if(a.target.classList.contains("history-btn")){const t=document.getElementById("historyModal"),o=document.getElementById("historyContent");o.innerHTML=(n=e==null?void 0:e.history)!=null&&n.length?e.history.map(i=>`
        <div><b>Date:</b> ${i.date} | <b>Status:</b> ${i.status} | <b>To:</b> ${i.givenTo} | <b>By:</b> ${i.sentBy}<br><b>Remarks:</b> ${i.remarks}</div><hr>
      `).join(""):"<i>No history found</i>",t.style.display="block"}if(a.target.classList.contains("update-btn")){const t=document.getElementById("statusModal");t.dataset.fileId=e.id,document.getElementById("updateStatus").value=e.status,document.getElementById("updateGivenTo").value=e.givenTo,document.getElementById("updateRemarks").value="",t.style.display="block"}});document.getElementById("closeHistoryModal").onclick=()=>document.getElementById("historyModal").style.display="none";document.getElementById("closeStatusModal").onclick=()=>{document.getElementById("statusModal").style.display="none",delete document.getElementById("statusModal").dataset.fileId};document.getElementById("statusForm").addEventListener("submit",async a=>{a.preventDefault();const s=document.getElementById("statusModal"),e=s.dataset.fileId,n=d.find(v=>v.id===e),t=document.getElementById("updateStatus").value,o=document.getElementById("updateGivenTo").value,i=document.getElementById("updateRemarks").value,p=n.history||[];p.push({date:new Date().toISOString().split("T")[0],status:t,sentBy:n.sentBy,givenTo:o,remarks:i}),await g(u(m,`files/${e}`),{...n,status:t,givenTo:o,remarks:i,history:p}),s.style.display="none"});
